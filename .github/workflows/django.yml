name: Django CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    # container: python:3.8-slim

    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    services:
      # Label used to access the service container
      postgres:
        image: postgres:9.6
        env:
          # Match docker-compose - and DATABASE_URL below
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
              pip install -r requirements-dev.txt

      - name: Cache
        uses: actions/cache@v1.2.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Lint
        run: |
          flake8 .

      - name: Run Tests
        run: |
          pytest --cov=./
        env:
          DATABASE_URL: "postgres://postgres:postgres@postgres:${{ job.services.postgres.ports[5432] }}/postgres"
          DJANGO_SECRET_KEY: gh_test
          DJANGO_ALLOWED_HOSTS: "*"
          DJANGO_S3_BUCKET_NAME: "gh_test"
          OAUTH_GITHUB_CLIENT_ID: gh_test
          OAUTH_GITHUB_CLIENT_SECRET: gh_test
          OAUTH_LINKEDIN_CLIENT_ID: gh_test
          OAUTH_LINKEDIN_CLIENT_SECRET: gh_test
          AWS_ACCESS_KEY_ID: gh_test
          AWS_SECRET_ACCESS_KEY: gh_test
          REDIS_URL: gh_test

      - name: Upload Coverage
        run: |
          bash <(curl -s https://codecov.io/bash)
